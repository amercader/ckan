version: 2
defaults:
  init_environemnt: &init_environment
    run: |
      test-infrastructure/init_environment.sh
  install_deps: &install_deps
    run: |
      test-infrastructure/install_deps.sh
  run_tests: &run_tests
    # Tests Backend, split across containers by segments
    run: |
      mkdir -p ~/junit
      case $CIRCLE_NODE_INDEX in
        0) python -m pytest $PYTEST_COMMON_OPTIONS --test-group 1
        ;;
        1) python -m pytest $PYTEST_COMMON_OPTIONS --test-group 2
        ;;
        2) python -m pytest $PYTEST_COMMON_OPTIONS --test-group 3
        ;;
        3) python -m pytest $PYTEST_COMMON_OPTIONS --test-group 4
        ;;
      esac

  # Tests Frontend, only in one container
  start_test_server: &start_test_server
    run:
      command: |
        case $CIRCLE_NODE_INDEX in
          $NODE_TESTS_CONTAINER) ckan -c test-core-circle-ci.ini run
          ;;
        esac
      background: true
  run_front_tests: &run_front_tests
    run:
      command: |
        case $CIRCLE_NODE_INDEX in
          $NODE_TESTS_CONTAINER)
            sleep 5
            $(npm bin)/cypress run
          ;;
        esac
  ckan_env: &ckan_env
    # Note, this should be in sync with test-infrastructure/docker-compose.yml
    environment:
      CKAN_DATASTORE_POSTGRES_DB: datastore_test
      CKAN_DATASTORE_POSTGRES_READ_USER: datastore_read
      CKAN_DATASTORE_POSTGRES_READ_PWD: pass
      CKAN_DATASTORE_POSTGRES_WRITE_USER: datastore_write
      CKAN_DATASTORE_POSTGRES_WRITE_PWD: pass
      CKAN_POSTGRES_DB: ckan_test
      CKAN_POSTGRES_USER: ckan_default
      CKAN_POSTGRES_PWD: pass
      PGPASSWORD: ckan
      NODE_TESTS_CONTAINER: 3
      PYTEST_COMMON_OPTIONS: -v --ckan-ini=test-core-circle-ci.ini --cov=ckan --cov=ckanext --junitxml=/root/junit/junit.xml --test-group-count 4  --test-group-random-seed 1

      pg_image: &pg_image
    # Note, this should be in sync with test-infrastructure/docker-compose.yml
    image: postgres:10
    environment:
      POSTGRES_USER: ckan
      POSTGRES_PASSWORD: ckan
    name: ckan-postgres

  redis_image: &redis_image
    # Note, this should be in sync with test-infrastructure/docker-compose.yml
    image: redis:3
    name: ckan-redis

  solr_image: &solr_image
    # Note, this should be in sync with test-infrastructure/docker-compose.yml
    image: ckan/ckan-solr:2.9-solr9
    name: ckan-solr

jobs:
  test-python-3:
    docker:
      - image: python:3.9-buster
        <<: *ckan_env
      - <<: *pg_image
      - <<: *redis_image
      - <<: *solr_image

    parallelism: 4

    steps:
      - checkout

      - <<: *install_deps
      - <<: *init_environment

      # Tests Backend, split across containers by segments
      - <<: *run_tests
      - store_test_results:
          path: ~/junit
      - <<: *start_test_server
      - <<: *run_front_tests
      - store_artifacts:
          path: ~/project/cypress/screenshots
      - run: coveralls
workflows:
  version: 2
  build_and_test:
    jobs:
      - test-python-3
